<?php

namespace Ath\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
	/**
     * getLimitfeed => retourne les 10 derniers posts que j'ai créé et des personnes que je suis du plus récent au plus ancien
     * 
     * @param  User $user, ArrayCollection of User $amis
     * @return array of collection of this
     */
    public function getLimitfeed($user, $amis){

    	foreach ($amis as $oneAmi) {
    		$amis[] = $oneAmi->getId();
    	}

        $query = $this->createQueryBuilder('p')
            ->Join('p.createdBy', 'u')
            ->where('u = :user')
            ->orWhere('u.id IN (:amis)')
            ->orderBy('p.createdAt', 'DESC')
            ->setParameters(array(
                'user' => $user,
                'amis' => $amis
            ))
            ->getQuery()
            ->setMaxResults(10)
            ->getResult();

        return $query;
    }
<<<<<<< HEAD

    /**
     * getTenPosts => retourne 10 posts que j'ai créé et des personnes que je suis du plus récent au plus ancien enfonction de la limit $first
     * 
     * @param  User $user, ArrayCollection of User $amis, Integer $first
     * @return array of collection of this
     */
    public function getTenPosts($user, $amis, $first = 0){

    	foreach ($amis as $oneAmi) {
    		$amis[] = $oneAmi->getId();
    	}

        $query = $this->createQueryBuilder('p')
            ->Join('p.createdBy', 'u')
            ->where('u = :user')
            ->orWhere('u.id IN (:amis)')
            ->orderBy('p.createdAt', 'DESC')
            ->setParameters(array(
                'user' => $user,
                'amis' => $amis
            ))
            ->getQuery()
            ->setFirstResult($first)
            ->setMaxResults(10)
            ->getResult();

        return $query;
    }
=======
>>>>>>> bd1d947a31348ee57d130b93fc4029ea4c7825a1
}
